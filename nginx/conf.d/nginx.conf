# https://habr.com/ru/post/66764/
# пользователь, от имени которого будет работать nginx (от рута работать плохо, все знают :) )
# user nginx;

# количество рабочих процессов
worker_processes  2;

# куда писать логи ошибок
# уровень уведомлений "notice", конечно, можно менять ( на info и др. )
# error_log /spool/logs/nginx/nginx.error_log notice;

# access_log /home/<app_name>/logs/nginx-access.log;
# error_log /home/<app_name>/logs/nginx-error.log;

events {
    worker_connections  2048;
}

http {
    include /etc/nginx/mime.types;

    sendfile on;
    keepalive_timeout 15;

    # first we declare our upstream server, which is our Gunicorn application
    upstream backend {
        # docker will automatically resolve this to the correct address
        # because we use the same name as the service: "djangoapp"
        server backend;
    }

    server {
        listen 80;
        #server_name localhost;
        charset utf-8;

        root /dist/;
        index index.html;

        #location / {
        #    try_files $uri $uri/ /index.html;
        #}

        # frontend
        location / {
            try_files $uri $uri/ @proxy_to_app;
        }

        location @proxy_to_app {
            rewrite ^(.+)$ /index.html last;
        }


        # backend urls
        location ~ ^/(admin|api|auth) {
            proxy_redirect off;
            proxy_pass http://backend;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
        }


        location ^~ /static/ {
            autoindex on;
            alias /dist/static/;

        }

        location ^~ /media/ {
            autoindex on;
            alias /dist/media/;

        }
    }

    # Прослушиваем порт бекэнда, чтобы /static/ и /media/ тоже раздовать nginx'ом
#    server {
#        listen 8000;
#        charset utf-8;
#
#        location / {
#            proxy_pass https://localhost:80;
#        }
#    }
}
